  
eureka:  
  client:
    register-with-eureka: false
    fetch-registry: false
    serviceUrl:
      defaultZone: http://localhost:8761/eureka
  instance:
    prefer-ip-address: true
    instance-id: ${spring.cloud.client.ipAddress}:${server.port}
    securePortEnabled: false  
    leaseRenewalIntervalInSeconds: 10  
    leaseExpirationDurationInSeconds: 3 
  server:
    enable-self-preservation: true 
    eviction-interval-timer-in-ms: 10000 
    response-cache-update-interval-ms: 3000
    use-read-only-response-cache: false 
    healthcheck:
      enabled: true
#    waitTimeInMsWhenSyncEmpty: 5
#    registry-sync-retry-wait-ms: 5000
#    a-sgcache-expiry-timeout-ms: 60000
#    eviction-interval-timer-in-ms: 30000
#    peer-eureka-nodes-update-interval-ms: 15000
#    renewal-threshold-update-interval-ms: 300000
#    enableSelfPreservation: true
#    peer-node-connect-timeout-ms: 60000
#    peer-node-connection-idle-timeout-seconds: 60000
#    peer-node-read-timeout-ms: 30000
#    peer-node-total-connections: 30000
#    peer-node-total-connections-per-host: 10

management:
  security:  
    enabled: false     



---------------------------------------------------------

management:
  security:  
    enabled: false  
    
spring:
  application:
    name: eurekanode

server:
  port: 8761
  connection-timeout: 900s

eureka:
  instance:
    hostname: eurekanode
    leaseRenewalIntervalInSeconds: 10
    prefer-ip-address: true
    leaseExpirationDurationInSeconds: 3    
  client:
    registerWithEureka: false
    fetchRegistry: false
    serviceUrl:
     defaultZone:  http://eurekanode:8761/eureka/
  server:
   # enableSelfPreservation: false
    waitTimeInMsWhenSyncEmpty: 0  
    peer-node-read-timeout-ms: 3000
    healthcheck:
      enabled: true
    serviceUrl:
      http://eurekanode:8761/eureka/
